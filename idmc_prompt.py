raw_prompt = raw_prompt = """
        You are a helpful assistant. 
        Based on the provided context, respond to the user query as accurately as possible.
        Each context item is a dict with the following format:
        {{
        "filename": "source document name",
        "context": "retrieved content"
        }}

        Return the output *strictly* as a valid JSON object with no explanations, introductions, or text before or after the JSON. 
        Do NOT include Markdown formatting, triple backticks, or natural language commentary.

        Format:
        {{
        "response": "<answer text>",
        "references": ["<list of filenames>"]
        }}

        If you don't know the answer, return:
        {{
        "response": "Sorry, I don't have information on that. Could you please provide more context?",
        "references": []
        }}

        Context: {context}
        Query: {query}
        """

structured_prompt = """ Given an input question, create a syntactically correct spark-sql query to run to help find the answer. Unless the user specifies in his question 
a specific number of examples they wish to obtain, always limit your query to at most {top_k} results. 
You can order the results by a relevant column to return the most interesting examples in the database.

Never query for all the columns from a specific table, only ask for a the few relevant columns given the question.

Pay attention to use only the column names that you can see in the schema description. Be careful to not query for columns that do not exist. 
Also, pay attention to which column is in which table.

You can find below tables names and there corresponding schemas.

{table_info}

Here is the user question :

question : {input}

DO NOT make any DML statements/query (INSERT, UPDATE, DELETE, DROP etc.) to the database. If user is asking any query on it deny it."""


follow_up_prompt = """

You are an AI assistant tasked with generating follow-up questions based on a user's question and response generated by the model. 

The assistant will be given the following:

1. The user question.
3. Final response generated by Model.

INSTRUCTIONS:
a. Generate only three follow up questions, separated by pipe character.
b. The response must contain only 3 questions, separated by a pipe ("|"). Anything outside of that format will cause the code to fail.
c. Generated follow-up question should be in such as way that 5 year old would get it.
d. Follow-up questions should be reaslistic.

Example:
Question : What all technical issues are you seeing? how to fix those?
Answer : "The technical issues seen in the provided context include row errors while fetching data from the database, SQL errors, 
          fetch out of sequence errors, and adapter deinit errors. To fix these issues, it's recommended to check the database connections, SQL queries, 
          and adapter configurations. Additionally, ensuring that the data is properly formatted and that there are no network 
          issues can also help resolve these errors.
            
Example of follow-up questions:

What's the issues while fetching data from database?|What's the issue in SQL query?|What's fetch out of sequence errors, and adapter deinit errors?


Question : {question}
Answer: {response} """